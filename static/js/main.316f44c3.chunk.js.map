{"version":3,"sources":["component/Header.js","component/DayList.js","component/Word.js","hooks/useFetch.js","component/Day.js","component/EmptyPage.js","component/CreateWord.js","component/CreateDay.js","App.js","index.js"],"names":["Header","className","to","DayList","days","dummy","length","map","day","id","Word","w","word","useState","setWord","isShow","setIsShow","isDone","setIsDone","type","checked","onChange","fetch","method","headers","body","JSON","stringify","then","res","ok","eng","kor","onClick","window","confirm","useFetch","url","data","setData","useEffect","json","Day","useParams","words","EmptyPage","CreateWord","history","useHistory","isLoading","setIsLoading","engRef","useRef","korRef","dayRef","onSubmit","e","preventDefault","current","value","alert","push","placeholder","ref","style","opacity","CreateDay","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.316f44c3.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\r\nexport default function Header(){\r\n    return(\r\n        <div className=\"header\">\r\n            <h1>\r\n                <Link to=\"/\">토익 영단어(고급)</Link>\r\n            </h1>\r\n            <div className=\"menu\">\r\n                <Link to=\"/create_word\" className=\"link\">\r\n                    단어 추가\r\n                </Link>\r\n                <Link to=\"/create_day\" className=\"link\">\r\n                    Day 추가\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {Link} from \"react-router-dom\";\r\n//import useFetch from \"../hooks/useFetch\";\r\nimport dummy from \"../db/data.json\";\r\n\r\nexport default function DayList(){\r\n    //const days = useFetch(\"http://localhost:3001/days\");\r\n    const days = dummy.days;\r\n\r\n    if(days.length === 0){\r\n        return <span>Loading...</span>\r\n    }\r\n    return (\r\n        <ul className=\"list_day\">\r\n            {days.map((day) => (\r\n                <li key={day.id}>\r\n                    <Link to={`/day/${day.day}`}>Day {day.day}</Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}","import {useState} from \"react\";\r\n\r\nexport default function Word({word: w}){\r\n    const [word, setWord] = useState(w);\r\n    const [isShow, setIsShow] = useState(false);\r\n    const [isDone, setIsDone] = useState(word.isDone);\r\n\r\n    function toggleDone(){\r\n        //setIsDone(!isDone);\r\n        fetch(`http://localhost:3001/words/${word.id}`, {\r\n            method: 'PUT',\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n            },\r\n            body : JSON.stringify({\r\n                ...word,\r\n                isDone : !isDone\r\n            }),\r\n        }).then(res => {\r\n            if(res.ok){\r\n                setIsDone(!isDone);\r\n            }\r\n        })\r\n    }\r\n\r\n    function del(){\r\n        if(window.confirm(\"삭제 하시겠습니까?\")){\r\n            fetch(`http://localhost:3001/words/${word.id}`, {\r\n                method: 'DELETE'\r\n            })\r\n            .then(res => {\r\n                if(res.ok){\r\n                    setWord({id : 0});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    if(word.id === 0){\r\n        return null;\r\n    }\r\n\r\n    function toggleShow(){\r\n        setIsShow(!isShow);\r\n    }\r\n\r\n    return(\r\n        <tr className={isDone ? \"off\" : \"\"}>\r\n            <td><input type=\"checkbox\" checked={isDone} onChange={toggleDone}></input></td>\r\n            <td>{word.eng}</td>\r\n            <td>{isShow && word.kor}</td>\r\n            <td>\r\n                <button onClick={toggleShow}>뜻 {isShow ? \"숨기기\" : \"보기\"}</button>\r\n                <button onClick={del} className=\"btn_del\">삭제</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetch(url){\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data =>{\r\n            setData(data);\r\n        })\r\n    }, [url]);\r\n\r\n    return data;\r\n}","import { useParams } from \"react-router-dom\";\r\nimport Word from \"../component/Word\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nexport default function Day(){\r\n    const { day } = useParams();\r\n    const words = useFetch(`http://localhost:3001/words?day=${day}`);\r\n    \r\n    return <>\r\n        <h2>Day {day}</h2>\r\n        {words.length === 0 && <span>Loading.....</span>}\r\n        <table>\r\n            <tbody>\r\n                {words.map(word => (\r\n                    <Word word={word} key={word.id} />\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </>;\r\n}","import {Link} from \"react-router-dom\";\r\nexport default function EmptyPage(){\r\n    return (\r\n        <>\r\n            <h2>잘못된 접근입니다.</h2>\r\n            <Link to=\"/\">돌아가기</Link>\r\n        </>\r\n    );\r\n}","import { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nexport default function CreateWord(){\r\n    const days = useFetch(\"http://localhost:3001/days\");\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    function onSubmit(e){\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        if(!isLoading){\r\n            fetch(`http://localhost:3001/words/`, {\r\n                method: 'POST',\r\n                headers : {\r\n                    'Content-Type' : 'application/json',\r\n                },\r\n                body : JSON.stringify({\r\n                    day: dayRef.current.value,\r\n                    eng: engRef.current.value,\r\n                    kor: korRef.current.value,\r\n                    isDone : false\r\n                }),\r\n            }).then(res => {\r\n                if(res.ok){\r\n                    alert(\"생성이 완료 되었습니다.\");\r\n                    history.push(`/day/${dayRef.current.value}`);\r\n                    setIsLoading(false);\r\n                }\r\n            })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const engRef = useRef(null);\r\n    const korRef = useRef(null);\r\n    const dayRef = useRef(null);\r\n\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n            <div className=\"input_area\">\r\n                <label>Eng</label>\r\n                <input type=\"text\" placeholder=\"computer\" ref={engRef}></input>\r\n            </div>\r\n            <div className=\"input_area\">\r\n                <label>Kor</label>\r\n                <input type=\"text\" placeholder=\"컴퓨터\" ref={korRef}></input>\r\n            </div>\r\n            <div className=\"input_area\">\r\n                <label>Day</label>\r\n                <select ref={dayRef}>\r\n                    {days.map(day => (\r\n                        <option key={day.id} value={day.day}>{day.day}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <button style={{opacity: isLoading ? 0.3 : 1}}> {isLoading ? \"Saving....\" : \"저장\"}</button>\r\n        </form>\r\n    );\r\n}","import useFetch from \"../hooks/useFetch\"\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function CreateDay(){\r\n    const days = useFetch(\"http://localhost:3001/days\");\r\n    const history = useHistory();\r\n    function addDay(){\r\n        fetch(`http://localhost:3001/days/`, {\r\n            method: 'POST',\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n            },\r\n            body : JSON.stringify({\r\n                day: days.length + 1\r\n            }),\r\n        }).then(res => {\r\n            if(res.ok){\r\n                alert(\"생성이 완료 되었습니다.\");\r\n                history.push(`/`);\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3>현재 일수 : {days.length}</h3>\r\n            <button onClick={addDay}>Day 추가</button>\r\n        </div>\r\n    )\r\n}","import Header from \"./component/Header\";\nimport DayList from \"./component/DayList\";\nimport Day from \"./component/Day\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport EmptyPage from \"./component/EmptyPage\";\nimport CreateWord from \"./component/CreateWord\";\nimport CreateDay from \"./component/CreateDay\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <DayList />\n                    </Route>\n                    <Route path=\"/day/:day\">\n                        <Day />\n                    </Route>\n                    <Route path=\"/create_word\">\n                        <CreateWord />\n                    </Route>\n                    <Route path=\"/create_day\">\n                        <CreateDay />\n                    </Route>\n                    <Route>\n                        <EmptyPage />\n                    </Route>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}